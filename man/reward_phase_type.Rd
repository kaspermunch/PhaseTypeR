% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reward_phase_type.R
\name{reward_phase_type}
\alias{reward_phase_type}
\title{Reward transformation}
\usage{
reward_phase_type(phase_type = NULL, init_probs = NULL,
subint_mat = NULL, reward_vec)
}
\arguments{
\item{phase_type}{an object of class \code{cont_phase_type} or
\code{disc_phase_type}.}

\item{reward}{a vector or one row matrix of the same length as the number of
states.
The vector should contains non negative values and only integer for discrete
phase-type class.


Either \code{phase_type} or \code{init_probs} and \code{subint_mat} should be
filled.
if both are filled \code{phase_type} will be used.
If there is no init_probs (and no phase_type) the first state will have an
initial probability of 1.}
}
\description{
Transform a variable following a phase-type distribution according to a
non-negative reward vector.
}
\examples{
##===========================##
## For continuous phase-type ##
##===========================##

subint_mat <- matrix(c(0.4, 0, 0,
                      0.24, 0.4, 0,
                      0.12, 0.2, 0.5), ncol = 3)
init_probs <- c(0.9, 0.1, 0)
reward <- c(1,0,4)

reward_phase_type(init_probs = init_probs,
                  subint_mat = subint_mat, reward = reward)

##=========================##
## For discrete phase-type ##
##=========================##

subint_mat <- matrix(c(0.4, 0, 0,
                      0.24, 0.4, 0,
                      0.12, 0.2, 0.5), ncol = 3)
init_probs <- c(0.9, 0.1, 0)
reward <- c(1,0,4)

reward_phase_type(init_probs = init_probs,
                  subint_mat = subint_mat, reward = reward)
#---


}
